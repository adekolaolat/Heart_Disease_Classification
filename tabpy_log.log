2023-07-21,04:10:57 [INFO] (app.py:app:300): Parsing config file C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\app\..\common\default.conf
2023-07-21,04:10:57 [DEBUG] (app.py:app:261): Parameter port set to "9004" from default value
2023-07-21,04:10:57 [DEBUG] (app.py:app:261): Parameter server_version set to "2.9.0" from default value
2023-07-21,04:10:57 [DEBUG] (app.py:app:261): Parameter evaluate_enabled set to "True" from default value
2023-07-21,04:10:57 [DEBUG] (app.py:app:261): Parameter evaluate_timeout set to "30" from default value
2023-07-21,04:10:57 [DEBUG] (app.py:app:261): Parameter upload_dir set to "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tmp\query_objects" from default value
2023-07-21,04:10:57 [DEBUG] (app.py:app:261): Parameter transfer_protocol set to "http" from default value
2023-07-21,04:10:57 [DEBUG] (app.py:app:268): Parameter certificate_file is not set
2023-07-21,04:10:57 [DEBUG] (app.py:app:268): Parameter key_file is not set
2023-07-21,04:10:57 [DEBUG] (app.py:app:261): Parameter state_file_path set to "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server" from default value
2023-07-21,04:10:57 [DEBUG] (app.py:app:261): Parameter static_path set to "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\static" from default value
2023-07-21,04:10:57 [DEBUG] (app.py:app:268): Parameter TABPY_PWD_FILE is not set
2023-07-21,04:10:57 [DEBUG] (app.py:app:261): Parameter log_request_context set to "false" from default value
2023-07-21,04:10:57 [DEBUG] (app.py:app:261): Parameter max_request_size_in_mb set to "100" from default value
2023-07-21,04:10:57 [DEBUG] (app.py:app:261): Parameter gzip_enabled set to "True" from default value
2023-07-21,04:10:57 [DEBUG] (app.py:app:261): Parameter arrow_enabled set to "False" from default value
2023-07-21,04:10:57 [DEBUG] (app.py:app:261): Parameter arrowflight_port set to "13622" from default value
2023-07-21,04:10:57 [INFO] (app.py:app:363): Setting max request size to 104857600 bytes
2023-07-21,04:10:57 [INFO] (app.py:app:527): Loading state from state file C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server\state.ini
2023-07-21,04:10:57 [DEBUG] (app.py:app:379): Static pages folder set to "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\static"
2023-07-21,04:11:02 [INFO] (app.py:app:492): Password file is not specified: Authentication is not enabled
2023-07-21,04:11:02 [INFO] (app.py:app:411): Call context logging is disabled
2023-07-21,04:11:02 [INFO] (app.py:app:181): Initializing TabPy...
2023-07-21,04:11:02 [DEBUG] (proactor_events.py:proactor_events:630): Using proactor: IocpProactor
2023-07-21,04:11:02 [INFO] (callbacks.py:callbacks:43): Initializing TabPy Server...
2023-07-21,04:11:02 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:11:02 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:11:02 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:11:02 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 16, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689906638, "schema": null}'
2023-07-21,04:11:02 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:11:02 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:02 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:11:02 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:11:02 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:11:02 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:02 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:11:02 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689907558, "schema": null}'
2023-07-21,04:11:02 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:11:02 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:02 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 16, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689906638, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689907558, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:11:02 [INFO] (app.py:app:185): Done initializing TabPy.
2023-07-21,04:11:02 [DEBUG] (selector_events.py:selector_events:54): Using selector: SelectSelector
2023-07-21,04:11:02 [INFO] (callbacks.py:callbacks:64): Initializing models...
2023-07-21,04:11:02 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:11:02 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:11:02 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:11:02 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 16, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689906638, "schema": null}'
2023-07-21,04:11:02 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:11:02 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:02 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:11:02 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:11:02 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:11:02 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:02 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:11:02 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689907558, "schema": null}'
2023-07-21,04:11:02 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:11:02 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:02 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 16, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689906638, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689907558, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:11:02 [INFO] (callbacks.py:callbacks:75): Load endpoint: getAccuracy, version: 16, type: model
2023-07-21,04:11:02 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,04:11:02 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getAccuracy', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getAccuracy/16', version=16, is_update=False, endpoint_type='model')
2023-07-21,04:11:02 [INFO] (python_service.py:python_service:89): Loading object:, URI=getAccuracy, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getAccuracy/16, version=16, is_updated=False
2023-07-21,04:11:02 [INFO] (callbacks.py:callbacks:75): Load endpoint: getIncorrectCases, version: 3, type: model
2023-07-21,04:11:02 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,04:11:02 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getIncorrectCases', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getIncorrectCases/3', version=3, is_update=False, endpoint_type='model')
2023-07-21,04:11:02 [INFO] (callbacks.py:callbacks:75): Load endpoint: getCorrectCases, version: 1, type: model
2023-07-21,04:11:02 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,04:11:02 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getCorrectCases', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getCorrectCases/1', version=1, is_update=False, endpoint_type='model')
2023-07-21,04:11:02 [INFO] (app.py:app:151): Web service listening on port 9004
2023-07-21,04:11:02 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,04:11:02 [INFO] (python_service.py:python_service:89): Loading object:, URI=getIncorrectCases, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getIncorrectCases/3, version=3, is_updated=False
2023-07-21,04:11:02 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,04:11:02 [INFO] (python_service.py:python_service:89): Loading object:, URI=getCorrectCases, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getCorrectCases/1, version=1, is_updated=False
2023-07-21,04:11:02 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:11:35 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:11:35 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:11:35 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 16, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689906638, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689907558, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 16, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689906638, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689907558, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:11:35 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 6.01ms
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:11:35 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:11:35 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:11:35 [INFO] (web.py:web:2344): 200 GET /configurations/endpoint_upload_destination (::1) 1.99ms
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:11:35 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:11:35 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): Processing PUT for /endpoints/getCorrectCases
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689907558, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:148): Collected endpoints: {'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689907558, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:11:35 [INFO] (base_handler.py:base_handler:115): Endpoint info: {'required_files': [], 'required_packages': [], 'description': 'Calculates the number of correct cases', 'src_path': 'C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server\\staging\\endpoints\\getCorrectCases\\2', 'version': 2, 'type': 'model', 'methods': [{'method': 'query'}], 'dependencies': [], 'name': 'getCorrectCases'}
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): Adding/updating model getCorrectCases...
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 16, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689906638, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689907558, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 16, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689906638, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689907558, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 16, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689906638, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689907558, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 16, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689906638, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689907558, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:11:35 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:11:35 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:11:35 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:11:35 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:11:35 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:11:35 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:11:35 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:11:35 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:11:35 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:11:35 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:11:35 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:11:35 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:11:35 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 16, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689906638, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 16, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689906638, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 16, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689906638, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 16, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689906638, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:11:35 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,04:11:35 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getCorrectCases', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getCorrectCases/2', version=2, is_update=True, endpoint_type='model')
2023-07-21,04:11:35 [INFO] (python_service.py:python_service:89): Loading object:, URI=getCorrectCases, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getCorrectCases/2, version=2, is_updated=True
2023-07-21,04:11:35 [INFO] (callbacks.py:callbacks:24): Waiting for object to be loaded...
2023-07-21,04:11:35 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:11:35 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 16, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 3, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 1, 'type': 'model', 'status': 'LoadInProgress', 'reason': None}})
2023-07-21,04:11:35 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,04:11:35 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:11:35 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 16, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 3, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 2, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,04:11:35 [INFO] (callbacks.py:callbacks:35): Object load status: LoadSuccessful
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:11:35 [DEBUG] (state.py:state:148): Collected endpoints: {'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:11:35 [INFO] (web.py:web:2344): 200 PUT /endpoints/getCorrectCases (::1) 151.21ms
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:11:35 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:11:35 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:11:35 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:11:35 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:11:35 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:11:35 [DEBUG] (base_handler.py:base_handler:115): Found models: {'getAccuracy': {'version': 16, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCases': {'version': 3, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCases': {'version': 2, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}}
2023-07-21,04:11:35 [INFO] (web.py:web:2344): 200 GET /status (::1) 3.99ms
2023-07-21,04:12:05 [INFO] (web.py:web:2344): 304 GET / (::1) 98.54ms
2023-07-21,04:12:05 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:12:05 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:12:05 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:12:05 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:12:05 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:12:05 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:12:05 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:12:05 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:12:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:05 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:12:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:05 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:12:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:05 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,04:12:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:05 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,04:12:05 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,04:12:05 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,04:12:05 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,04:12:05 [INFO] (web.py:web:2344): 304 GET /info (::1) 7.93ms
2023-07-21,04:12:05 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:12:05 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:12:05 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:12:05 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:12:05 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:12:05 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:12:05 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:12:05 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:12:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:05 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:12:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:05 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:12:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:05 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:12:05 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:12:05 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:05 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 16, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689906638, "schema": null}'
2023-07-21,04:12:05 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:05 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:05 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:05 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:12:05 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:05 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:05 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:05 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:12:05 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:05 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:05 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 16, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689906638, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:05 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 7.16ms
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:12:38 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 16, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689906638, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 16, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689906638, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 6.88ms
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:12:38 [INFO] (web.py:web:2344): 200 GET /configurations/endpoint_upload_destination (::1) 2.37ms
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Processing PUT for /endpoints/getAccuracy
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 16, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689906638, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 16, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689906638, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Endpoint info: {'type': 'model', 'dependencies': [], 'description': 'Calculates the test accuracy', 'src_path': 'C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server\\staging\\endpoints\\getAccuracy\\17', 'required_packages': [], 'required_files': [], 'methods': [{'method': 'query'}], 'name': 'getAccuracy', 'version': 17}
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Adding/updating model getAccuracy...
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 16, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689906638, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 16, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689906638, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 16, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689906638, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 16, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689906638, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getAccuracy', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getAccuracy/17', version=17, is_update=True, endpoint_type='model')
2023-07-21,04:12:38 [INFO] (python_service.py:python_service:89): Loading object:, URI=getAccuracy, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getAccuracy/17, version=17, is_updated=True
2023-07-21,04:12:38 [INFO] (callbacks.py:callbacks:24): Waiting for object to be loaded...
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 16, 'type': 'model', 'status': 'LoadInProgress', 'reason': None}, 'getIncorrectCases': {'version': 3, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 2, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,04:12:38 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 17, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 3, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 2, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,04:12:38 [INFO] (callbacks.py:callbacks:35): Object load status: LoadSuccessful
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [INFO] (web.py:web:2344): 200 PUT /endpoints/getAccuracy (::1) 152.67ms
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:12:38 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Found models: {'getAccuracy': {'version': 17, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCases': {'version': 3, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCases': {'version': 2, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}}
2023-07-21,04:12:38 [INFO] (web.py:web:2344): 200 GET /status (::1) 2.99ms
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:12:38 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 4.98ms
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:12:38 [INFO] (web.py:web:2344): 200 GET /configurations/endpoint_upload_destination (::1) 1.99ms
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Processing PUT for /endpoints/getIncorrectCases
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Endpoint info: {'type': 'model', 'dependencies': [], 'description': 'Calculates the number of incorrect cases', 'src_path': 'C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server\\staging\\endpoints\\getIncorrectCases\\4', 'required_packages': [], 'required_files': [], 'methods': [{'method': 'query'}], 'name': 'getIncorrectCases', 'version': 4}
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Adding/updating model getIncorrectCases...
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689907380, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689907380, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getIncorrectCases', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getIncorrectCases/4', version=4, is_update=True, endpoint_type='model')
2023-07-21,04:12:38 [INFO] (python_service.py:python_service:89): Loading object:, URI=getIncorrectCases, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getIncorrectCases/4, version=4, is_updated=True
2023-07-21,04:12:38 [INFO] (callbacks.py:callbacks:24): Waiting for object to be loaded...
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 17, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 3, 'type': 'model', 'status': 'LoadInProgress', 'reason': None}, 'getCorrectCases': {'version': 2, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,04:12:38 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 17, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 2, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,04:12:38 [INFO] (callbacks.py:callbacks:35): Object load status: LoadSuccessful
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [INFO] (web.py:web:2344): 200 PUT /endpoints/getIncorrectCases (::1) 154.39ms
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:12:38 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Found models: {'getAccuracy': {'version': 17, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCases': {'version': 2, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}}
2023-07-21,04:12:38 [INFO] (web.py:web:2344): 200 GET /status (::1) 3.08ms
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:12:38 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 6.22ms
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:12:38 [INFO] (web.py:web:2344): 200 GET /configurations/endpoint_upload_destination (::1) 2.08ms
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Processing PUT for /endpoints/getCorrectCases
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Endpoint info: {'type': 'model', 'dependencies': [], 'description': 'Calculates the number of correct cases', 'src_path': 'C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server\\staging\\endpoints\\getCorrectCases\\3', 'required_packages': [], 'required_files': [], 'methods': [{'method': 'query'}], 'name': 'getCorrectCases', 'version': 3}
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Adding/updating model getCorrectCases...
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 2, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909095, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 2, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909095, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:12:38 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getCorrectCases', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getCorrectCases/3', version=3, is_update=True, endpoint_type='model')
2023-07-21,04:12:38 [INFO] (python_service.py:python_service:89): Loading object:, URI=getCorrectCases, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getCorrectCases/3, version=3, is_updated=True
2023-07-21,04:12:38 [INFO] (callbacks.py:callbacks:24): Waiting for object to be loaded...
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 17, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 2, 'type': 'model', 'status': 'LoadInProgress', 'reason': None}})
2023-07-21,04:12:38 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:12:38 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 17, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 3, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,04:12:38 [INFO] (callbacks.py:callbacks:35): Object load status: LoadSuccessful
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:12:38 [DEBUG] (state.py:state:148): Collected endpoints: {'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:12:38 [INFO] (web.py:web:2344): 200 PUT /endpoints/getCorrectCases (::1) 150.00ms
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:12:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:12:38 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:12:38 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:12:38 [DEBUG] (base_handler.py:base_handler:115): Found models: {'getAccuracy': {'version': 17, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCases': {'version': 3, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}}
2023-07-21,04:12:38 [INFO] (web.py:web:2344): 200 GET /status (::1) 4.00ms
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:13:13 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:13 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 6.55ms
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:13:13 [INFO] (web.py:web:2344): 200 GET /configurations/endpoint_upload_destination (::1) 2.01ms
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Processing PUT for /endpoints/getAccuracy
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Endpoint info: {'name': 'getAccuracy', 'required_files': [], 'description': 'Calculates the test accuracy', 'version': 18, 'methods': [{'method': 'query'}], 'dependencies': [], 'type': 'model', 'src_path': 'C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server\\staging\\endpoints\\getAccuracy\\18', 'required_packages': []}
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Adding/updating model getAccuracy...
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 17, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 17, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:13 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:13 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:13 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:13 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:13 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:13 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:13 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:13 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:13 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:13 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:13 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:13 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:13 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,04:13:13 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getAccuracy', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getAccuracy/18', version=18, is_update=True, endpoint_type='model')
2023-07-21,04:13:13 [INFO] (python_service.py:python_service:89): Loading object:, URI=getAccuracy, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getAccuracy/18, version=18, is_updated=True
2023-07-21,04:13:13 [INFO] (callbacks.py:callbacks:24): Waiting for object to be loaded...
2023-07-21,04:13:13 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:13:13 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 17, 'type': 'model', 'status': 'LoadInProgress', 'reason': None}, 'getIncorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 3, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,04:13:13 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,04:13:13 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:13:13 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 18, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 3, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,04:13:13 [INFO] (callbacks.py:callbacks:35): Object load status: LoadSuccessful
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:13 [INFO] (web.py:web:2344): 200 PUT /endpoints/getAccuracy (::1) 148.62ms
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:13:13 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Found models: {'getAccuracy': {'version': 18, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCases': {'version': 3, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}}
2023-07-21,04:13:13 [INFO] (web.py:web:2344): 200 GET /status (::1) 3.99ms
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:13:13 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:13 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 4.98ms
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:13:13 [INFO] (web.py:web:2344): 200 GET /configurations/endpoint_upload_destination (::1) 1.99ms
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Processing PUT for /endpoints/getIncorrectCases
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:148): Collected endpoints: {'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Endpoint info: {'name': 'getIncorrectCases', 'required_files': [], 'description': 'Calculates the number of incorrect cases', 'version': 5, 'methods': [{'method': 'query'}], 'dependencies': [], 'type': 'model', 'src_path': 'C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server\\staging\\endpoints\\getIncorrectCases\\5', 'required_packages': []}
2023-07-21,04:13:13 [DEBUG] (base_handler.py:base_handler:115): Adding/updating model getIncorrectCases...
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:13 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:13 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:13 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:13 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:13 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:13 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:13 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:13 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:13 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:13 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:13 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:13 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:13 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:13 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:13 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:14 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,04:13:14 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getIncorrectCases', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getIncorrectCases/5', version=5, is_update=True, endpoint_type='model')
2023-07-21,04:13:14 [INFO] (python_service.py:python_service:89): Loading object:, URI=getIncorrectCases, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getIncorrectCases/5, version=5, is_updated=True
2023-07-21,04:13:14 [INFO] (callbacks.py:callbacks:24): Waiting for object to be loaded...
2023-07-21,04:13:14 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:13:14 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 18, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadInProgress', 'reason': None}, 'getCorrectCases': {'version': 3, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,04:13:14 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,04:13:14 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:13:14 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 18, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 3, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,04:13:14 [INFO] (callbacks.py:callbacks:35): Object load status: LoadSuccessful
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:148): Collected endpoints: {'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:14 [INFO] (web.py:web:2344): 200 PUT /endpoints/getIncorrectCases (::1) 155.77ms
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:13:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:13:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:13:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Found models: {'getAccuracy': {'version': 18, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCases': {'version': 3, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}}
2023-07-21,04:13:14 [INFO] (web.py:web:2344): 200 GET /status (::1) 3.44ms
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:13:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:13:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:13:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:14 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 5.98ms
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:13:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:13:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:13:14 [INFO] (web.py:web:2344): 200 GET /configurations/endpoint_upload_destination (::1) 1.99ms
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:13:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:13:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Processing PUT for /endpoints/getCorrectCases
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:148): Collected endpoints: {'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:14 [INFO] (base_handler.py:base_handler:115): Endpoint info: {'name': 'getCorrectCases', 'required_files': [], 'description': 'Calculates the number of correct cases', 'version': 4, 'methods': [{'method': 'query'}], 'dependencies': [], 'type': 'model', 'src_path': 'C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server\\staging\\endpoints\\getCorrectCases\\4', 'required_packages': []}
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Adding/updating model getCorrectCases...
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 3, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909158, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 3, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909158, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:14 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:14 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:14 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:14 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:14 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:14 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:14 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:14 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:14 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:14 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:14 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:13:14 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:13:14 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:14 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,04:13:14 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getCorrectCases', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getCorrectCases/4', version=4, is_update=True, endpoint_type='model')
2023-07-21,04:13:14 [INFO] (python_service.py:python_service:89): Loading object:, URI=getCorrectCases, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getCorrectCases/4, version=4, is_updated=True
2023-07-21,04:13:14 [INFO] (callbacks.py:callbacks:24): Waiting for object to be loaded...
2023-07-21,04:13:14 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:13:14 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 18, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 3, 'type': 'model', 'status': 'LoadInProgress', 'reason': None}})
2023-07-21,04:13:14 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,04:13:14 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:13:14 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 18, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,04:13:14 [INFO] (callbacks.py:callbacks:35): Object load status: LoadSuccessful
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:13:14 [DEBUG] (state.py:state:148): Collected endpoints: {'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:13:14 [INFO] (web.py:web:2344): 200 PUT /endpoints/getCorrectCases (::1) 160.45ms
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:13:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:13:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:13:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:14 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:13:14 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:14 [DEBUG] (base_handler.py:base_handler:115): Found models: {'getAccuracy': {'version': 18, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}}
2023-07-21,04:13:14 [INFO] (web.py:web:2344): 200 GET /status (::1) 2.99ms
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:13:43 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:13:43 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:13:43 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:13:43 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:13:43 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:43 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:13:43 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:43 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:13:43 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:43 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,04:13:43 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:43 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,04:13:43 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,04:13:43 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,04:13:43 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,04:13:43 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 3.97ms
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:13:43 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:13:43 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:13:43 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:13:43 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:13:43 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:43 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:13:43 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:43 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:13:43 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,04:13:43 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getIncorrectCases')['response']

2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getIncorrectCases...
2023-07-21,04:13:43 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:13:43 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:13:43 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getIncorrectCases...
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): Processing query getIncorrectCases...
2023-07-21,04:13:43 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:13:43 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:13:43 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:43 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:13:43 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:43 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:13:43 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getIncorrectCases...
2023-07-21,04:13:43 [DEBUG] (python_service.py:python_service:236): Querying Python service getIncorrectCases...
2023-07-21,04:13:43 [DEBUG] (python_service.py:python_service:248): Found object {'version': 5, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5CCBD30>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,04:13:43 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,04:13:43 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,04:13:43 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 18
2023-07-21,04:13:43 [ERROR] (custom_query_object.py:custom_query_object:67): Cannot properly serialize custom query result, error: Result from object query is not json serializable: 18
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 18
2023-07-21,04:13:43 [ERROR] (python_service.py:python_service:272): Result from object query is not json serializable: 18
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\psws\python_service.py", line 264, in query
    result = pred_obj.query(**params)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 18
2023-07-21,04:13:43 [ERROR] (python_service.py:python_service:274): TypeError : Result from object query is not json serializable: 18
2023-07-21,04:13:43 [DEBUG] (base_handler.py:base_handler:115): Query info: QueryFailed(uri='getIncorrectCases', error='TypeError : Result from object query is not json serializable: 18')
2023-07-21,04:13:43 [ERROR] (base_handler.py:base_handler:115): Failed query, response: QueryFailed(uri='getIncorrectCases', error='TypeError : Result from object query is not json serializable: 18')
2023-07-21,04:13:43 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error querying function 'getIncorrectCases'", info="{'uri': 'getIncorrectCases', 'error': 'TypeError : Result from object query is not json serializable: 18', 'type': 'QueryFailed'}"
2023-07-21,04:13:43 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getIncorrectCases HTTP/1.1" 500 197
2023-07-21,04:13:43 [ERROR] (web.py:web:2344): 500 POST /query/getIncorrectCases (::1) 75.62ms
2023-07-21,04:13:43 [ERROR] (base_handler.py:base_handler:115): Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 178, in post
    yield self._post_impl()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 118, in _post_impl
    result = yield self._call_subprocess(function_to_evaluate, arguments)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 212, in _call_subprocess
    ret = yield gen.with_timeout(timedelta(seconds=self.eval_timeout), future)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "<string>", line 3, in _user_script
KeyError: 'response'

2023-07-21,04:13:43 [ERROR] (base_handler.py:base_handler:115): Responding with status=404, message="Error processing script", info="The endpoint you're trying to query did not respond. Please make sure the endpoint exists and the correct set of arguments are provided."
2023-07-21,04:13:43 [WARNING] (web.py:web:2344): 404 POST /evaluate (127.0.0.1) 96.31ms
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:14:09 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:14:09 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:14:09 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:14:09 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:14:09 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:09 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:14:09 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:09 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:14:09 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:09 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,04:14:09 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:09 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,04:14:09 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,04:14:09 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,04:14:09 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,04:14:09 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 6.98ms
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:14:09 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:14:09 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:14:09 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:14:09 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:14:09 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:09 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:14:09 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:09 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:14:09 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,04:14:09 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getIncorrectCases')['response']

2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getIncorrectCases...
2023-07-21,04:14:09 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:14:09 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:14:09 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getIncorrectCases...
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): Processing query getIncorrectCases...
2023-07-21,04:14:09 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:14:09 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:14:09 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:09 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:14:09 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:09 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:14:09 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getIncorrectCases...
2023-07-21,04:14:09 [DEBUG] (python_service.py:python_service:236): Querying Python service getIncorrectCases...
2023-07-21,04:14:09 [DEBUG] (python_service.py:python_service:248): Found object {'version': 5, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5CCBD30>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,04:14:09 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,04:14:09 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,04:14:09 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 18
2023-07-21,04:14:09 [ERROR] (custom_query_object.py:custom_query_object:67): Cannot properly serialize custom query result, error: Result from object query is not json serializable: 18
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 18
2023-07-21,04:14:09 [ERROR] (python_service.py:python_service:272): Result from object query is not json serializable: 18
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\psws\python_service.py", line 264, in query
    result = pred_obj.query(**params)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 18
2023-07-21,04:14:09 [ERROR] (python_service.py:python_service:274): TypeError : Result from object query is not json serializable: 18
2023-07-21,04:14:09 [DEBUG] (base_handler.py:base_handler:115): Query info: QueryFailed(uri='getIncorrectCases', error='TypeError : Result from object query is not json serializable: 18')
2023-07-21,04:14:09 [ERROR] (base_handler.py:base_handler:115): Failed query, response: QueryFailed(uri='getIncorrectCases', error='TypeError : Result from object query is not json serializable: 18')
2023-07-21,04:14:09 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error querying function 'getIncorrectCases'", info="{'uri': 'getIncorrectCases', 'error': 'TypeError : Result from object query is not json serializable: 18', 'type': 'QueryFailed'}"
2023-07-21,04:14:09 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getIncorrectCases HTTP/1.1" 500 197
2023-07-21,04:14:09 [ERROR] (web.py:web:2344): 500 POST /query/getIncorrectCases (::1) 30.90ms
2023-07-21,04:14:09 [ERROR] (base_handler.py:base_handler:115): Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 178, in post
    yield self._post_impl()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 118, in _post_impl
    result = yield self._call_subprocess(function_to_evaluate, arguments)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 212, in _call_subprocess
    ret = yield gen.with_timeout(timedelta(seconds=self.eval_timeout), future)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "<string>", line 3, in _user_script
KeyError: 'response'

2023-07-21,04:14:09 [ERROR] (base_handler.py:base_handler:115): Responding with status=404, message="Error processing script", info="The endpoint you're trying to query did not respond. Please make sure the endpoint exists and the correct set of arguments are provided."
2023-07-21,04:14:09 [WARNING] (web.py:web:2344): 404 POST /evaluate (127.0.0.1) 45.35ms
2023-07-21,04:14:15 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:14:15 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:14:15 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:14:15 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:14:15 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:14:15 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:14:15 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:14:15 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:14:15 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:15 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:14:15 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:15 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:14:15 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:15 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,04:14:15 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:15 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,04:14:15 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,04:14:15 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,04:14:15 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,04:14:15 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 12.92ms
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:14:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:14:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:14:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:14:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:14:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:14:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:14:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:18 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,04:14:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:18 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,04:14:18 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,04:14:18 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,04:14:18 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,04:14:18 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 6.46ms
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:14:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:14:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:14:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:14:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:14:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:14:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:14:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,04:14:18 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getIncorrectCases')['response']

2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getIncorrectCases...
2023-07-21,04:14:18 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:14:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:14:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getIncorrectCases...
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): Processing query getIncorrectCases...
2023-07-21,04:14:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:14:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:14:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:14:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:14:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getIncorrectCases...
2023-07-21,04:14:18 [DEBUG] (python_service.py:python_service:236): Querying Python service getIncorrectCases...
2023-07-21,04:14:18 [DEBUG] (python_service.py:python_service:248): Found object {'version': 5, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5CCBD30>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,04:14:18 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,04:14:18 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,04:14:18 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 18
2023-07-21,04:14:18 [ERROR] (custom_query_object.py:custom_query_object:67): Cannot properly serialize custom query result, error: Result from object query is not json serializable: 18
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 18
2023-07-21,04:14:18 [ERROR] (python_service.py:python_service:272): Result from object query is not json serializable: 18
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\psws\python_service.py", line 264, in query
    result = pred_obj.query(**params)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 18
2023-07-21,04:14:18 [ERROR] (python_service.py:python_service:274): TypeError : Result from object query is not json serializable: 18
2023-07-21,04:14:18 [DEBUG] (base_handler.py:base_handler:115): Query info: QueryFailed(uri='getIncorrectCases', error='TypeError : Result from object query is not json serializable: 18')
2023-07-21,04:14:18 [ERROR] (base_handler.py:base_handler:115): Failed query, response: QueryFailed(uri='getIncorrectCases', error='TypeError : Result from object query is not json serializable: 18')
2023-07-21,04:14:18 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error querying function 'getIncorrectCases'", info="{'uri': 'getIncorrectCases', 'error': 'TypeError : Result from object query is not json serializable: 18', 'type': 'QueryFailed'}"
2023-07-21,04:14:18 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getIncorrectCases HTTP/1.1" 500 197
2023-07-21,04:14:18 [ERROR] (web.py:web:2344): 500 POST /query/getIncorrectCases (::1) 33.94ms
2023-07-21,04:14:18 [ERROR] (base_handler.py:base_handler:115): Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 178, in post
    yield self._post_impl()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 118, in _post_impl
    result = yield self._call_subprocess(function_to_evaluate, arguments)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 212, in _call_subprocess
    ret = yield gen.with_timeout(timedelta(seconds=self.eval_timeout), future)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "<string>", line 3, in _user_script
KeyError: 'response'

2023-07-21,04:14:18 [ERROR] (base_handler.py:base_handler:115): Responding with status=404, message="Error processing script", info="The endpoint you're trying to query did not respond. Please make sure the endpoint exists and the correct set of arguments are provided."
2023-07-21,04:14:18 [WARNING] (web.py:web:2344): 404 POST /evaluate (127.0.0.1) 48.89ms
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:18:22 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 5.77ms
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:18:22 [INFO] (web.py:web:2344): 200 GET /configurations/endpoint_upload_destination (::1) 2.24ms
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Processing PUT for /endpoints/getAccuracy
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Endpoint info: {'methods': [{'method': 'query'}], 'dependencies': [], 'required_files': [], 'required_packages': [], 'type': 'model', 'version': 19, 'description': 'Calculates the test accuracy', 'src_path': 'C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server\\staging\\endpoints\\getAccuracy\\19', 'name': 'getAccuracy'}
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Adding/updating model getAccuracy...
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 18, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 18, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,04:18:22 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getAccuracy', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getAccuracy/19', version=19, is_update=True, endpoint_type='model')
2023-07-21,04:18:22 [INFO] (python_service.py:python_service:89): Loading object:, URI=getAccuracy, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getAccuracy/19, version=19, is_updated=True
2023-07-21,04:18:22 [INFO] (callbacks.py:callbacks:24): Waiting for object to be loaded...
2023-07-21,04:18:22 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:18:22 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 18, 'type': 'model', 'status': 'LoadInProgress', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,04:18:22 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,04:18:22 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:18:22 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 19, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,04:18:22 [INFO] (callbacks.py:callbacks:35): Object load status: LoadSuccessful
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [INFO] (web.py:web:2344): 200 PUT /endpoints/getAccuracy (::1) 142.90ms
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:18:22 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Found models: {'getAccuracy': {'version': 19, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}}
2023-07-21,04:18:22 [INFO] (web.py:web:2344): 200 GET /status (::1) 4.74ms
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:18:22 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 6.81ms
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:18:22 [INFO] (web.py:web:2344): 200 GET /configurations/endpoint_upload_destination (::1) 0.98ms
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Adding endpoint "getIncorrectCase"
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Adding/updating model getIncorrectCase...
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,04:18:22 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getIncorrectCase', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getIncorrectCase/1', version=1, is_update=False, endpoint_type='model')
2023-07-21,04:18:22 [INFO] (python_service.py:python_service:89): Loading object:, URI=getIncorrectCase, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getIncorrectCase/1, version=1, is_updated=False
2023-07-21,04:18:22 [INFO] (callbacks.py:callbacks:24): Waiting for object to be loaded...
2023-07-21,04:18:22 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:18:22 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 19, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadInProgress', 'reason': None}})
2023-07-21,04:18:22 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,04:18:22 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:18:22 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 19, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,04:18:22 [INFO] (callbacks.py:callbacks:35): Object load status: LoadSuccessful
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Endpoint getIncorrectCase successfully added
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [INFO] (web.py:web:2344): 201 POST /endpoints (::1) 156.92ms
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:18:22 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Found models: {'getAccuracy': {'version': 19, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}}
2023-07-21,04:18:22 [INFO] (web.py:web:2344): 200 GET /status (::1) 5.04ms
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:18:22 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 9.34ms
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:18:22 [INFO] (web.py:web:2344): 200 GET /configurations/endpoint_upload_destination (::1) 1.99ms
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Adding endpoint "getCorrectCase"
2023-07-21,04:18:22 [DEBUG] (base_handler.py:base_handler:115): Adding/updating model getCorrectCase...
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (state.py:state:642): Writing state to config
2023-07-21,04:18:22 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,04:18:22 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:22 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,04:18:22 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:22 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:22 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,04:18:22 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getCorrectCase', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getCorrectCase/1', version=1, is_update=False, endpoint_type='model')
2023-07-21,04:18:22 [INFO] (python_service.py:python_service:89): Loading object:, URI=getCorrectCase, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getCorrectCase/1, version=1, is_updated=False
2023-07-21,04:18:22 [INFO] (callbacks.py:callbacks:24): Waiting for object to be loaded...
2023-07-21,04:18:22 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:18:22 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 19, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadInProgress', 'reason': None}})
2023-07-21,04:18:22 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,04:18:23 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,04:18:23 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 19, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,04:18:23 [INFO] (callbacks.py:callbacks:35): Object load status: LoadSuccessful
2023-07-21,04:18:23 [DEBUG] (base_handler.py:base_handler:115): Endpoint getCorrectCase successfully added
2023-07-21,04:18:23 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,04:18:23 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:23 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,04:18:23 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:23 [DEBUG] (state.py:state:148): Collected endpoints: {'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:23 [INFO] (web.py:web:2344): 201 POST /endpoints (::1) 161.27ms
2023-07-21,04:18:23 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:18:23 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:18:23 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:18:23 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:18:23 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:18:23 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:18:23 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:18:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:18:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:18:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:18:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:23 [DEBUG] (base_handler.py:base_handler:115): Found models: {'getAccuracy': {'version': 19, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}}
2023-07-21,04:18:23 [INFO] (web.py:web:2344): 200 GET /status (::1) 5.00ms
2023-07-21,04:18:52 [INFO] (web.py:web:2344): 304 GET / (::1) 1.20ms
2023-07-21,04:18:52 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:18:52 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:18:52 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:18:52 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:18:52 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:18:52 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:18:52 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,04:18:52 [INFO] (web.py:web:2344): 304 GET /info (::1) 8.22ms
2023-07-21,04:18:52 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:18:52 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:18:52 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:18:52 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:18:52 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:18:52 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:18:52 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,04:18:52 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,04:18:52 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,04:18:52 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,04:18:52 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 10.43ms
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:19:23 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:19:23 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:19:23 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:19:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:19:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:19:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:19:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:19:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:19:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:19:23 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,04:19:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:19:23 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,04:19:23 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,04:19:23 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,04:19:23 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,04:19:23 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 5.98ms
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:19:23 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:19:23 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:19:23 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:19:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:19:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:19:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:19:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:19:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:19:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,04:19:23 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getIncorrectCases')['response']

2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getIncorrectCases...
2023-07-21,04:19:23 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,04:19:23 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,04:19:23 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getIncorrectCases...
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): Processing query getIncorrectCases...
2023-07-21,04:19:23 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,04:19:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,04:19:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:19:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,04:19:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:19:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,04:19:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getIncorrectCases...
2023-07-21,04:19:23 [DEBUG] (python_service.py:python_service:236): Querying Python service getIncorrectCases...
2023-07-21,04:19:23 [DEBUG] (python_service.py:python_service:248): Found object {'version': 5, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5CCBD30>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,04:19:23 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,04:19:23 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,04:19:23 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 18
2023-07-21,04:19:23 [ERROR] (custom_query_object.py:custom_query_object:67): Cannot properly serialize custom query result, error: Result from object query is not json serializable: 18
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 18
2023-07-21,04:19:23 [ERROR] (python_service.py:python_service:272): Result from object query is not json serializable: 18
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\psws\python_service.py", line 264, in query
    result = pred_obj.query(**params)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 18
2023-07-21,04:19:23 [ERROR] (python_service.py:python_service:274): TypeError : Result from object query is not json serializable: 18
2023-07-21,04:19:23 [DEBUG] (base_handler.py:base_handler:115): Query info: QueryFailed(uri='getIncorrectCases', error='TypeError : Result from object query is not json serializable: 18')
2023-07-21,04:19:23 [ERROR] (base_handler.py:base_handler:115): Failed query, response: QueryFailed(uri='getIncorrectCases', error='TypeError : Result from object query is not json serializable: 18')
2023-07-21,04:19:23 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error querying function 'getIncorrectCases'", info="{'uri': 'getIncorrectCases', 'error': 'TypeError : Result from object query is not json serializable: 18', 'type': 'QueryFailed'}"
2023-07-21,04:19:23 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getIncorrectCases HTTP/1.1" 500 197
2023-07-21,04:19:23 [ERROR] (web.py:web:2344): 500 POST /query/getIncorrectCases (::1) 27.91ms
2023-07-21,04:19:23 [ERROR] (base_handler.py:base_handler:115): Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 178, in post
    yield self._post_impl()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 118, in _post_impl
    result = yield self._call_subprocess(function_to_evaluate, arguments)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 212, in _call_subprocess
    ret = yield gen.with_timeout(timedelta(seconds=self.eval_timeout), future)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "<string>", line 3, in _user_script
KeyError: 'response'

2023-07-21,04:19:23 [ERROR] (base_handler.py:base_handler:115): Responding with status=404, message="Error processing script", info="The endpoint you're trying to query did not respond. Please make sure the endpoint exists and the correct set of arguments are provided."
2023-07-21,04:19:23 [WARNING] (web.py:web:2344): 404 POST /evaluate (127.0.0.1) 39.87ms
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:18:23 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:18:23 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:18:23 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:18:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:18:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:18:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:18:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:18:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:18:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:18:23 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:18:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:18:23 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:18:23 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:18:23 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:18:23 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:18:23 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 5.36ms
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:18:23 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:18:23 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:18:23 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:18:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:18:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:18:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:18:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:18:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:18:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:18:23 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getIncorrectCases')['response']

2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getIncorrectCases...
2023-07-21,10:18:23 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:18:23 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:18:23 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getIncorrectCases...
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): Processing query getIncorrectCases...
2023-07-21,10:18:23 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:18:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:18:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:18:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:18:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:18:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:18:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getIncorrectCases...
2023-07-21,10:18:23 [DEBUG] (python_service.py:python_service:236): Querying Python service getIncorrectCases...
2023-07-21,10:18:23 [DEBUG] (python_service.py:python_service:248): Found object {'version': 5, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5CCBD30>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:18:23 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:18:23 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:18:23 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 18
2023-07-21,10:18:23 [ERROR] (custom_query_object.py:custom_query_object:67): Cannot properly serialize custom query result, error: Result from object query is not json serializable: 18
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 18
2023-07-21,10:18:23 [ERROR] (python_service.py:python_service:272): Result from object query is not json serializable: 18
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\psws\python_service.py", line 264, in query
    result = pred_obj.query(**params)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 18
2023-07-21,10:18:23 [ERROR] (python_service.py:python_service:274): TypeError : Result from object query is not json serializable: 18
2023-07-21,10:18:23 [DEBUG] (base_handler.py:base_handler:115): Query info: QueryFailed(uri='getIncorrectCases', error='TypeError : Result from object query is not json serializable: 18')
2023-07-21,10:18:23 [ERROR] (base_handler.py:base_handler:115): Failed query, response: QueryFailed(uri='getIncorrectCases', error='TypeError : Result from object query is not json serializable: 18')
2023-07-21,10:18:23 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error querying function 'getIncorrectCases'", info="{'uri': 'getIncorrectCases', 'error': 'TypeError : Result from object query is not json serializable: 18', 'type': 'QueryFailed'}"
2023-07-21,10:18:23 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getIncorrectCases HTTP/1.1" 500 197
2023-07-21,10:18:23 [ERROR] (web.py:web:2344): 500 POST /query/getIncorrectCases (::1) 23.02ms
2023-07-21,10:18:23 [ERROR] (base_handler.py:base_handler:115): Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 178, in post
    yield self._post_impl()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 118, in _post_impl
    result = yield self._call_subprocess(function_to_evaluate, arguments)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 212, in _call_subprocess
    ret = yield gen.with_timeout(timedelta(seconds=self.eval_timeout), future)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "<string>", line 3, in _user_script
KeyError: 'response'

2023-07-21,10:18:23 [ERROR] (base_handler.py:base_handler:115): Responding with status=404, message="Error processing script", info="The endpoint you're trying to query did not respond. Please make sure the endpoint exists and the correct set of arguments are provided."
2023-07-21,10:18:23 [WARNING] (web.py:web:2344): 404 POST /evaluate (127.0.0.1) 34.87ms
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:20:53 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:20:53 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:20:53 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:20:53 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:20:53 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:20:53 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:20:53 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:20:53 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:20:53 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:20:53 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:20:53 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:20:53 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:20:53 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:20:53 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:20:53 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:20:53 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 3.94ms
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:20:53 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:20:53 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:20:53 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:20:53 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:20:53 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:20:53 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:20:53 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:20:53 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:20:53 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:20:53 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getCorrectCase')['response']

2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getCorrectCase...
2023-07-21,10:20:53 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:20:53 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:20:53 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getCorrectCase...
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): Processing query getCorrectCase...
2023-07-21,10:20:53 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:20:53 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:20:53 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:20:53 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:20:53 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:20:53 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:20:53 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getCorrectCase...
2023-07-21,10:20:53 [DEBUG] (python_service.py:python_service:236): Querying Python service getCorrectCase...
2023-07-21,10:20:53 [DEBUG] (python_service.py:python_service:248): Found object {'version': 1, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5F51C00>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:20:53 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:20:53 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:20:53 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 187
2023-07-21,10:20:53 [ERROR] (custom_query_object.py:custom_query_object:67): Cannot properly serialize custom query result, error: Result from object query is not json serializable: 187
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 187
2023-07-21,10:20:53 [ERROR] (python_service.py:python_service:272): Result from object query is not json serializable: 187
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\psws\python_service.py", line 264, in query
    result = pred_obj.query(**params)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 187
2023-07-21,10:20:53 [ERROR] (python_service.py:python_service:274): TypeError : Result from object query is not json serializable: 187
2023-07-21,10:20:53 [DEBUG] (base_handler.py:base_handler:115): Query info: QueryFailed(uri='getCorrectCase', error='TypeError : Result from object query is not json serializable: 187')
2023-07-21,10:20:53 [ERROR] (base_handler.py:base_handler:115): Failed query, response: QueryFailed(uri='getCorrectCase', error='TypeError : Result from object query is not json serializable: 187')
2023-07-21,10:20:53 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error querying function 'getCorrectCase'", info="{'uri': 'getCorrectCase', 'error': 'TypeError : Result from object query is not json serializable: 187', 'type': 'QueryFailed'}"
2023-07-21,10:20:53 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getCorrectCase HTTP/1.1" 500 192
2023-07-21,10:20:53 [ERROR] (web.py:web:2344): 500 POST /query/getCorrectCase (::1) 20.93ms
2023-07-21,10:20:53 [ERROR] (base_handler.py:base_handler:115): Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 178, in post
    yield self._post_impl()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 118, in _post_impl
    result = yield self._call_subprocess(function_to_evaluate, arguments)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 212, in _call_subprocess
    ret = yield gen.with_timeout(timedelta(seconds=self.eval_timeout), future)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "<string>", line 3, in _user_script
KeyError: 'response'

2023-07-21,10:20:53 [ERROR] (base_handler.py:base_handler:115): Responding with status=404, message="Error processing script", info="The endpoint you're trying to query did not respond. Please make sure the endpoint exists and the correct set of arguments are provided."
2023-07-21,10:20:53 [WARNING] (web.py:web:2344): 404 POST /evaluate (127.0.0.1) 32.35ms
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:00 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:00 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:00 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:00 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:00 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:00 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:00 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:00 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:00 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:00 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:21:00 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:00 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:21:00 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:21:00 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:21:00 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:21:00 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 12.05ms
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:00 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:00 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:00 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:00 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:00 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:00 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:00 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:00 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:00 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:21:00 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getIncorrectCases')['response']

2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getIncorrectCases...
2023-07-21,10:21:00 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:00 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:00 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getIncorrectCases...
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): Processing query getIncorrectCases...
2023-07-21,10:21:00 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:00 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:00 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:00 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:00 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:00 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:00 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getIncorrectCases...
2023-07-21,10:21:00 [DEBUG] (python_service.py:python_service:236): Querying Python service getIncorrectCases...
2023-07-21,10:21:00 [DEBUG] (python_service.py:python_service:248): Found object {'version': 5, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5CCBD30>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:21:00 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:21:00 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:21:00 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 18
2023-07-21,10:21:00 [ERROR] (custom_query_object.py:custom_query_object:67): Cannot properly serialize custom query result, error: Result from object query is not json serializable: 18
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 18
2023-07-21,10:21:00 [ERROR] (python_service.py:python_service:272): Result from object query is not json serializable: 18
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\psws\python_service.py", line 264, in query
    result = pred_obj.query(**params)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 18
2023-07-21,10:21:00 [ERROR] (python_service.py:python_service:274): TypeError : Result from object query is not json serializable: 18
2023-07-21,10:21:00 [DEBUG] (base_handler.py:base_handler:115): Query info: QueryFailed(uri='getIncorrectCases', error='TypeError : Result from object query is not json serializable: 18')
2023-07-21,10:21:00 [ERROR] (base_handler.py:base_handler:115): Failed query, response: QueryFailed(uri='getIncorrectCases', error='TypeError : Result from object query is not json serializable: 18')
2023-07-21,10:21:00 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error querying function 'getIncorrectCases'", info="{'uri': 'getIncorrectCases', 'error': 'TypeError : Result from object query is not json serializable: 18', 'type': 'QueryFailed'}"
2023-07-21,10:21:00 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getIncorrectCases HTTP/1.1" 500 197
2023-07-21,10:21:00 [ERROR] (web.py:web:2344): 500 POST /query/getIncorrectCases (::1) 25.84ms
2023-07-21,10:21:00 [ERROR] (base_handler.py:base_handler:115): Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 178, in post
    yield self._post_impl()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 118, in _post_impl
    result = yield self._call_subprocess(function_to_evaluate, arguments)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 212, in _call_subprocess
    ret = yield gen.with_timeout(timedelta(seconds=self.eval_timeout), future)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "<string>", line 3, in _user_script
KeyError: 'response'

2023-07-21,10:21:00 [ERROR] (base_handler.py:base_handler:115): Responding with status=404, message="Error processing script", info="The endpoint you're trying to query did not respond. Please make sure the endpoint exists and the correct set of arguments are provided."
2023-07-21,10:21:00 [WARNING] (web.py:web:2344): 404 POST /evaluate (127.0.0.1) 62.79ms
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:05 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:05 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:05 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:05 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:05 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:05 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:05 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:21:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:05 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:21:05 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:21:05 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:21:05 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:21:05 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 10.06ms
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:05 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:05 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:05 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:05 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:05 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:05 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:21:05 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getAccuracy') ['response']

2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getAccuracy...
2023-07-21,10:21:05 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:05 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:05 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getAccuracy...
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): Processing query getAccuracy...
2023-07-21,10:21:05 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:05 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:05 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:05 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:05 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getAccuracy...
2023-07-21,10:21:05 [DEBUG] (python_service.py:python_service:236): Querying Python service getAccuracy...
2023-07-21,10:21:05 [DEBUG] (python_service.py:python_service:248): Found object {'version': 19, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5CCB6D0>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:21:05 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:21:05 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:21:05 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 91.2
2023-07-21,10:21:05 [DEBUG] (base_handler.py:base_handler:115): Query info: QuerySuccessful(uri='getAccuracy', version=19, response=91.2)
2023-07-21,10:21:05 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getAccuracy HTTP/1.1" 200 105
2023-07-21,10:21:05 [INFO] (web.py:web:2344): 200 POST /query/getAccuracy (::1) 13.95ms
2023-07-21,10:21:05 [INFO] (web.py:web:2344): 200 POST /evaluate (127.0.0.1) 21.88ms
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:07 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:07 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:07 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:21:07 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 7.90ms
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:07 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:07 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:07 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:21:07 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getAccuracy') ['response']

2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getAccuracy...
2023-07-21,10:21:07 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:07 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:07 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getAccuracy...
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Processing query getAccuracy...
2023-07-21,10:21:07 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getAccuracy...
2023-07-21,10:21:07 [DEBUG] (python_service.py:python_service:236): Querying Python service getAccuracy...
2023-07-21,10:21:07 [DEBUG] (python_service.py:python_service:248): Found object {'version': 19, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5CCB6D0>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:21:07 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:21:07 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:21:07 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 91.2
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Query info: QuerySuccessful(uri='getAccuracy', version=19, response=91.2)
2023-07-21,10:21:07 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getAccuracy HTTP/1.1" 200 105
2023-07-21,10:21:07 [INFO] (web.py:web:2344): 200 POST /query/getAccuracy (::1) 14.95ms
2023-07-21,10:21:07 [INFO] (web.py:web:2344): 200 POST /evaluate (127.0.0.1) 38.34ms
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:07 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:07 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:07 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:21:07 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 5.98ms
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:07 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:07 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:07 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:21:07 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getIncorrectCases')['response']

2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getIncorrectCases...
2023-07-21,10:21:07 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:07 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:07 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getIncorrectCases...
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Processing query getIncorrectCases...
2023-07-21,10:21:07 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:07 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getIncorrectCases...
2023-07-21,10:21:07 [DEBUG] (python_service.py:python_service:236): Querying Python service getIncorrectCases...
2023-07-21,10:21:07 [DEBUG] (python_service.py:python_service:248): Found object {'version': 5, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5CCBD30>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:21:07 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:21:07 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:21:07 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 18
2023-07-21,10:21:07 [ERROR] (custom_query_object.py:custom_query_object:67): Cannot properly serialize custom query result, error: Result from object query is not json serializable: 18
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 18
2023-07-21,10:21:07 [ERROR] (python_service.py:python_service:272): Result from object query is not json serializable: 18
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\psws\python_service.py", line 264, in query
    result = pred_obj.query(**params)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 18
2023-07-21,10:21:07 [ERROR] (python_service.py:python_service:274): TypeError : Result from object query is not json serializable: 18
2023-07-21,10:21:07 [DEBUG] (base_handler.py:base_handler:115): Query info: QueryFailed(uri='getIncorrectCases', error='TypeError : Result from object query is not json serializable: 18')
2023-07-21,10:21:07 [ERROR] (base_handler.py:base_handler:115): Failed query, response: QueryFailed(uri='getIncorrectCases', error='TypeError : Result from object query is not json serializable: 18')
2023-07-21,10:21:07 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error querying function 'getIncorrectCases'", info="{'uri': 'getIncorrectCases', 'error': 'TypeError : Result from object query is not json serializable: 18', 'type': 'QueryFailed'}"
2023-07-21,10:21:07 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getIncorrectCases HTTP/1.1" 500 197
2023-07-21,10:21:07 [ERROR] (web.py:web:2344): 500 POST /query/getIncorrectCases (::1) 46.84ms
2023-07-21,10:21:07 [ERROR] (base_handler.py:base_handler:115): Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 178, in post
    yield self._post_impl()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 118, in _post_impl
    result = yield self._call_subprocess(function_to_evaluate, arguments)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 212, in _call_subprocess
    ret = yield gen.with_timeout(timedelta(seconds=self.eval_timeout), future)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "<string>", line 3, in _user_script
KeyError: 'response'

2023-07-21,10:21:07 [ERROR] (base_handler.py:base_handler:115): Responding with status=404, message="Error processing script", info="The endpoint you're trying to query did not respond. Please make sure the endpoint exists and the correct set of arguments are provided."
2023-07-21,10:21:07 [WARNING] (web.py:web:2344): 404 POST /evaluate (127.0.0.1) 59.80ms
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:10 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:10 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:10 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:10 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:10 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:10 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:10 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:10 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:10 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:10 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:21:10 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:10 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:21:10 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:21:10 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:21:10 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:21:10 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 4.98ms
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:10 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:10 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:10 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:10 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:10 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:10 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:10 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:10 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:10 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:21:10 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getCorrectCase')['response']

2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getCorrectCase...
2023-07-21,10:21:10 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:10 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:10 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getCorrectCase...
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): Processing query getCorrectCase...
2023-07-21,10:21:10 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:10 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:10 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:10 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:10 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:10 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:10 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getCorrectCase...
2023-07-21,10:21:10 [DEBUG] (python_service.py:python_service:236): Querying Python service getCorrectCase...
2023-07-21,10:21:10 [DEBUG] (python_service.py:python_service:248): Found object {'version': 1, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5F51C00>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:21:10 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:21:10 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:21:10 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 187
2023-07-21,10:21:10 [ERROR] (custom_query_object.py:custom_query_object:67): Cannot properly serialize custom query result, error: Result from object query is not json serializable: 187
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 187
2023-07-21,10:21:10 [ERROR] (python_service.py:python_service:272): Result from object query is not json serializable: 187
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\psws\python_service.py", line 264, in query
    result = pred_obj.query(**params)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 187
2023-07-21,10:21:10 [ERROR] (python_service.py:python_service:274): TypeError : Result from object query is not json serializable: 187
2023-07-21,10:21:10 [DEBUG] (base_handler.py:base_handler:115): Query info: QueryFailed(uri='getCorrectCase', error='TypeError : Result from object query is not json serializable: 187')
2023-07-21,10:21:10 [ERROR] (base_handler.py:base_handler:115): Failed query, response: QueryFailed(uri='getCorrectCase', error='TypeError : Result from object query is not json serializable: 187')
2023-07-21,10:21:10 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error querying function 'getCorrectCase'", info="{'uri': 'getCorrectCase', 'error': 'TypeError : Result from object query is not json serializable: 187', 'type': 'QueryFailed'}"
2023-07-21,10:21:10 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getCorrectCase HTTP/1.1" 500 192
2023-07-21,10:21:10 [ERROR] (web.py:web:2344): 500 POST /query/getCorrectCase (::1) 19.93ms
2023-07-21,10:21:10 [ERROR] (base_handler.py:base_handler:115): Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 178, in post
    yield self._post_impl()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 118, in _post_impl
    result = yield self._call_subprocess(function_to_evaluate, arguments)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 212, in _call_subprocess
    ret = yield gen.with_timeout(timedelta(seconds=self.eval_timeout), future)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "<string>", line 3, in _user_script
KeyError: 'response'

2023-07-21,10:21:10 [ERROR] (base_handler.py:base_handler:115): Responding with status=404, message="Error processing script", info="The endpoint you're trying to query did not respond. Please make sure the endpoint exists and the correct set of arguments are provided."
2023-07-21,10:21:10 [WARNING] (web.py:web:2344): 404 POST /evaluate (127.0.0.1) 30.90ms
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:19 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:19 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:19 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:19 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:19 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:19 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:19 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:19 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:19 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:19 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:21:19 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:19 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:21:19 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:21:19 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:21:19 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:21:19 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 5.98ms
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:19 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:19 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:19 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:19 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:19 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:19 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:19 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:19 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:19 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:21:19 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getCorrectCase')['response']

2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getCorrectCase...
2023-07-21,10:21:19 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:21:19 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:21:19 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getCorrectCase...
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): Processing query getCorrectCase...
2023-07-21,10:21:19 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:21:19 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:21:19 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:19 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:21:19 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:19 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:21:19 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getCorrectCase...
2023-07-21,10:21:19 [DEBUG] (python_service.py:python_service:236): Querying Python service getCorrectCase...
2023-07-21,10:21:19 [DEBUG] (python_service.py:python_service:248): Found object {'version': 1, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5F51C00>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:21:19 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:21:19 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:21:19 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 187
2023-07-21,10:21:19 [ERROR] (custom_query_object.py:custom_query_object:67): Cannot properly serialize custom query result, error: Result from object query is not json serializable: 187
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 187
2023-07-21,10:21:19 [ERROR] (python_service.py:python_service:272): Result from object query is not json serializable: 187
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\psws\python_service.py", line 264, in query
    result = pred_obj.query(**params)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 187
2023-07-21,10:21:19 [ERROR] (python_service.py:python_service:274): TypeError : Result from object query is not json serializable: 187
2023-07-21,10:21:19 [DEBUG] (base_handler.py:base_handler:115): Query info: QueryFailed(uri='getCorrectCase', error='TypeError : Result from object query is not json serializable: 187')
2023-07-21,10:21:19 [ERROR] (base_handler.py:base_handler:115): Failed query, response: QueryFailed(uri='getCorrectCase', error='TypeError : Result from object query is not json serializable: 187')
2023-07-21,10:21:19 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error querying function 'getCorrectCase'", info="{'uri': 'getCorrectCase', 'error': 'TypeError : Result from object query is not json serializable: 187', 'type': 'QueryFailed'}"
2023-07-21,10:21:19 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getCorrectCase HTTP/1.1" 500 192
2023-07-21,10:21:19 [ERROR] (web.py:web:2344): 500 POST /query/getCorrectCase (::1) 23.69ms
2023-07-21,10:21:19 [ERROR] (base_handler.py:base_handler:115): Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 178, in post
    yield self._post_impl()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 118, in _post_impl
    result = yield self._call_subprocess(function_to_evaluate, arguments)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 212, in _call_subprocess
    ret = yield gen.with_timeout(timedelta(seconds=self.eval_timeout), future)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "<string>", line 3, in _user_script
KeyError: 'response'

2023-07-21,10:21:19 [ERROR] (base_handler.py:base_handler:115): Responding with status=404, message="Error processing script", info="The endpoint you're trying to query did not respond. Please make sure the endpoint exists and the correct set of arguments are provided."
2023-07-21,10:21:19 [WARNING] (web.py:web:2344): 404 POST /evaluate (127.0.0.1) 33.94ms
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:24:56 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:24:56 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:24:56 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:24:56 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:24:56 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:24:56 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:24:56 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:24:56 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:24:56 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:24:56 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:24:56 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:24:56 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:24:56 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:24:56 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:24:56 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:24:56 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 13.06ms
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:24:56 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:24:56 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:24:56 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:24:56 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:24:56 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:24:56 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:24:56 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:24:56 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:24:56 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:24:56 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getCorrectCase')['response']

2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getCorrectCase...
2023-07-21,10:24:56 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:24:56 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:24:56 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getCorrectCase...
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): Processing query getCorrectCase...
2023-07-21,10:24:56 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:24:56 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:24:56 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:24:56 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:24:56 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:24:56 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:24:56 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getCorrectCase...
2023-07-21,10:24:56 [DEBUG] (python_service.py:python_service:236): Querying Python service getCorrectCase...
2023-07-21,10:24:56 [DEBUG] (python_service.py:python_service:248): Found object {'version': 1, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5F51C00>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:24:56 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:24:56 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:24:56 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 187
2023-07-21,10:24:56 [ERROR] (custom_query_object.py:custom_query_object:67): Cannot properly serialize custom query result, error: Result from object query is not json serializable: 187
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 187
2023-07-21,10:24:56 [ERROR] (python_service.py:python_service:272): Result from object query is not json serializable: 187
Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 96, in _make_serializable
    json.dumps(result)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type int64 is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\psws\python_service.py", line 264, in query
    result = pred_obj.query(**params)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\custom_query_object.py", line 65, in query
    return self._make_serializable(ret)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_tools\query_object.py", line 98, in _make_serializable
    raise TypeError(
TypeError: Result from object query is not json serializable: 187
2023-07-21,10:24:56 [ERROR] (python_service.py:python_service:274): TypeError : Result from object query is not json serializable: 187
2023-07-21,10:24:56 [DEBUG] (base_handler.py:base_handler:115): Query info: QueryFailed(uri='getCorrectCase', error='TypeError : Result from object query is not json serializable: 187')
2023-07-21,10:24:56 [ERROR] (base_handler.py:base_handler:115): Failed query, response: QueryFailed(uri='getCorrectCase', error='TypeError : Result from object query is not json serializable: 187')
2023-07-21,10:24:56 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error querying function 'getCorrectCase'", info="{'uri': 'getCorrectCase', 'error': 'TypeError : Result from object query is not json serializable: 187', 'type': 'QueryFailed'}"
2023-07-21,10:24:56 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getCorrectCase HTTP/1.1" 500 192
2023-07-21,10:24:56 [ERROR] (web.py:web:2344): 500 POST /query/getCorrectCase (::1) 34.18ms
2023-07-21,10:24:56 [ERROR] (base_handler.py:base_handler:115): Traceback (most recent call last):
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 178, in post
    yield self._post_impl()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 118, in _post_impl
    result = yield self._call_subprocess(function_to_evaluate, arguments)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 780, in run
    yielded = self.gen.throw(exc)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tabpy\tabpy_server\handlers\evaluation_plane_handler.py", line 212, in _call_subprocess
    ret = yield gen.with_timeout(timedelta(seconds=self.eval_timeout), future)
  File "C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\lib\site-packages\tornado\gen.py", line 767, in run
    value = future.result()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "<string>", line 3, in _user_script
KeyError: 'response'

2023-07-21,10:24:56 [ERROR] (base_handler.py:base_handler:115): Responding with status=404, message="Error processing script", info="The endpoint you're trying to query did not respond. Please make sure the endpoint exists and the correct set of arguments are provided."
2023-07-21,10:24:56 [WARNING] (web.py:web:2344): 404 POST /evaluate (127.0.0.1) 69.06ms
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:26:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:26:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:26:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:26:18 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 4.91ms
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:26:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:26:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:26:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:26:18 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getAccuracy') ['response']

2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getAccuracy...
2023-07-21,10:26:18 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:26:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:26:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getAccuracy...
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Processing query getAccuracy...
2023-07-21,10:26:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getAccuracy...
2023-07-21,10:26:18 [DEBUG] (python_service.py:python_service:236): Querying Python service getAccuracy...
2023-07-21,10:26:18 [DEBUG] (python_service.py:python_service:248): Found object {'version': 19, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5CCB6D0>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:26:18 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:26:18 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:26:18 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 91.2
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Query info: QuerySuccessful(uri='getAccuracy', version=19, response=91.2)
2023-07-21,10:26:18 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getAccuracy HTTP/1.1" 200 105
2023-07-21,10:26:18 [INFO] (web.py:web:2344): 200 POST /query/getAccuracy (::1) 13.95ms
2023-07-21,10:26:18 [INFO] (web.py:web:2344): 200 POST /evaluate (127.0.0.1) 21.93ms
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:26:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:26:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:26:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:26:18 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 5.33ms
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:26:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:26:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:26:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:26:18 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getAccuracy') ['response']

2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getAccuracy...
2023-07-21,10:26:18 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:26:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:26:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getAccuracy...
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Processing query getAccuracy...
2023-07-21,10:26:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:26:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getAccuracy...
2023-07-21,10:26:18 [DEBUG] (python_service.py:python_service:236): Querying Python service getAccuracy...
2023-07-21,10:26:18 [DEBUG] (python_service.py:python_service:248): Found object {'version': 19, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5CCB6D0>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:26:18 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:26:18 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:26:18 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 91.2
2023-07-21,10:26:18 [DEBUG] (base_handler.py:base_handler:115): Query info: QuerySuccessful(uri='getAccuracy', version=19, response=91.2)
2023-07-21,10:26:18 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getAccuracy HTTP/1.1" 200 105
2023-07-21,10:26:18 [INFO] (web.py:web:2344): 200 POST /query/getAccuracy (::1) 16.70ms
2023-07-21,10:26:18 [INFO] (web.py:web:2344): 200 POST /evaluate (127.0.0.1) 24.49ms
2023-07-21,10:29:11 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:29:11 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:29:11 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:29:11 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:29:11 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:29:11 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:29:11 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:29:11 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:29:11 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:29:11 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:29:11 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:29:11 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:29:11 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:29:11 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:29:11 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:29:11 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:29:11 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:29:11 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:29:11 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:29:11 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 4.98ms
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:29:13 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:29:13 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:29:13 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:29:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:29:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:29:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:29:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:29:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:29:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:29:13 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:29:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:29:13 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:29:13 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:29:13 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:29:13 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:29:13 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 4.98ms
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:29:13 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:29:13 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:29:13 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:29:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:29:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:29:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:29:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:29:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:29:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:29:13 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getAccuracy') ['response']

2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getAccuracy...
2023-07-21,10:29:13 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:29:13 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:29:13 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getAccuracy...
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): Processing query getAccuracy...
2023-07-21,10:29:13 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:29:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:29:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:29:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:29:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:29:13 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:29:13 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getAccuracy...
2023-07-21,10:29:13 [DEBUG] (python_service.py:python_service:236): Querying Python service getAccuracy...
2023-07-21,10:29:13 [DEBUG] (python_service.py:python_service:248): Found object {'version': 19, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5CCB6D0>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:29:13 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:29:13 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:29:13 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 91.2
2023-07-21,10:29:13 [DEBUG] (base_handler.py:base_handler:115): Query info: QuerySuccessful(uri='getAccuracy', version=19, response=91.2)
2023-07-21,10:29:13 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getAccuracy HTTP/1.1" 200 105
2023-07-21,10:29:13 [INFO] (web.py:web:2344): 200 POST /query/getAccuracy (::1) 15.31ms
2023-07-21,10:29:13 [INFO] (web.py:web:2344): 200 POST /evaluate (127.0.0.1) 23.22ms
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:30:16 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:30:16 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:30:16 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:30:16 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 5.98ms
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:30:16 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:30:16 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:30:16 [INFO] (web.py:web:2344): 200 GET /configurations/endpoint_upload_destination (::1) 1.99ms
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:30:16 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:30:16 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): Processing PUT for /endpoints/getAccuracy
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:30:16 [INFO] (base_handler.py:base_handler:115): Endpoint info: {'version': 20, 'required_packages': [], 'dependencies': [], 'required_files': [], 'name': 'getAccuracy', 'methods': [{'method': 'query'}], 'src_path': 'C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server\\staging\\endpoints\\getAccuracy\\20', 'description': 'Calculates the test accuracy', 'type': 'model'}
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): Adding/updating model getAccuracy...
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 19, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 19, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:30:16 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:16 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:16 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:16 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:16 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:16 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:16 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:16 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:16 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:16 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:16 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:16 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:16 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:16 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:16 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:16 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:16 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:16 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:16 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:16 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:16 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 20, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931816, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 20, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931816, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 20, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931816, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 20, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931816, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:30:16 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,10:30:16 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getAccuracy', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getAccuracy/20', version=20, is_update=True, endpoint_type='model')
2023-07-21,10:30:16 [INFO] (python_service.py:python_service:89): Loading object:, URI=getAccuracy, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getAccuracy/20, version=20, is_updated=True
2023-07-21,10:30:16 [INFO] (callbacks.py:callbacks:24): Waiting for object to be loaded...
2023-07-21,10:30:16 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,10:30:16 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 19, 'type': 'model', 'status': 'LoadInProgress', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,10:30:16 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,10:30:16 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,10:30:16 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 20, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,10:30:16 [INFO] (callbacks.py:callbacks:35): Object load status: LoadSuccessful
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 20, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931816, "schema": null}'
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:16 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 20, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931816, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:30:16 [INFO] (web.py:web:2344): 200 PUT /endpoints/getAccuracy (::1) 166.82ms
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:30:16 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:30:16 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:30:16 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:16 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:30:16 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:16 [DEBUG] (base_handler.py:base_handler:115): Found models: {'getAccuracy': {'version': 20, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}}
2023-07-21,10:30:16 [INFO] (web.py:web:2344): 200 GET /status (::1) 3.99ms
2023-07-21,10:30:29 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:30:29 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:30:29 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:30:29 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:30:29 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:30:29 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:30:29 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 20, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931816, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 20, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931816, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:30:29 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 7.99ms
2023-07-21,10:30:29 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:30:29 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:30:29 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:30:29 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:30:29 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:30:29 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:30:29 [INFO] (web.py:web:2344): 200 GET /configurations/endpoint_upload_destination (::1) 1.98ms
2023-07-21,10:30:29 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:30:29 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:30:29 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:30:29 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:30:29 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:30:29 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:30:29 [DEBUG] (base_handler.py:base_handler:115): Processing PUT for /endpoints/getAccuracy
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 20, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931816, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 20, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931816, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:30:29 [INFO] (base_handler.py:base_handler:115): Endpoint info: {'required_packages': [], 'version': 21, 'required_files': [], 'methods': [{'method': 'query'}], 'description': 'Calculates the test accuracy', 'type': 'model', 'src_path': 'C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server\\staging\\endpoints\\getAccuracy\\21', 'dependencies': [], 'name': 'getAccuracy'}
2023-07-21,10:30:29 [DEBUG] (base_handler.py:base_handler:115): Adding/updating model getAccuracy...
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 20, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931816, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 20, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931816, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 20, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931816, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 20, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931816, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:30:29 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:29 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:29 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:29 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:29 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:29 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:29 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:29 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:29 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:29 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:29 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:29 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:29 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:29 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:29 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:29 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:29 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:29 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:29 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:30:29 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:30:29 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:30:29 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:30:29 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:29 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:30:29 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,10:30:29 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getAccuracy', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getAccuracy/21', version=21, is_update=True, endpoint_type='model')
2023-07-21,10:30:29 [INFO] (python_service.py:python_service:89): Loading object:, URI=getAccuracy, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getAccuracy/21, version=21, is_updated=True
2023-07-21,10:30:29 [INFO] (callbacks.py:callbacks:24): Waiting for object to be loaded...
2023-07-21,10:30:29 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,10:30:29 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 20, 'type': 'model', 'status': 'LoadInProgress', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,10:30:29 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,10:30:30 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,10:30:30 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 21, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,10:30:30 [INFO] (callbacks.py:callbacks:35): Object load status: LoadSuccessful
2023-07-21,10:30:30 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:30:30 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:30:30 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:30:30 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:30:30 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:30:30 [INFO] (web.py:web:2344): 200 PUT /endpoints/getAccuracy (::1) 157.83ms
2023-07-21,10:30:30 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:30:30 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:30:30 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:30:30 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:30:30 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:30:30 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:30:30 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:30:30 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:30:30 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:30 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:30:30 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:30 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:30:30 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:30 [DEBUG] (base_handler.py:base_handler:115): Found models: {'getAccuracy': {'version': 21, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}}
2023-07-21,10:30:30 [INFO] (web.py:web:2344): 200 GET /status (::1) 2.99ms
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:30:57 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:30:57 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:30:57 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:30:57 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:30:57 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:57 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:30:57 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:57 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:30:57 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:57 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:30:57 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:57 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:30:57 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:30:57 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:30:57 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:30:57 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 4.98ms
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:30:57 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:30:57 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:30:57 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:30:57 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:30:57 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:57 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:30:57 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:57 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:30:57 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:30:57 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getAccuracy') ['response']

2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getAccuracy...
2023-07-21,10:30:57 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:30:57 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:30:57 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getAccuracy...
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): Processing query getAccuracy...
2023-07-21,10:30:57 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:30:57 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:30:57 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:57 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:30:57 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:57 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:30:57 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getAccuracy...
2023-07-21,10:30:57 [DEBUG] (python_service.py:python_service:236): Querying Python service getAccuracy...
2023-07-21,10:30:57 [DEBUG] (python_service.py:python_service:248): Found object {'version': 21, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5DE22C0>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:30:57 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:30:57 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:30:57 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 91.2%
2023-07-21,10:30:57 [DEBUG] (base_handler.py:base_handler:115): Query info: QuerySuccessful(uri='getAccuracy', version=21, response='91.2%')
2023-07-21,10:30:57 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getAccuracy HTTP/1.1" 200 108
2023-07-21,10:30:57 [INFO] (web.py:web:2344): 200 POST /query/getAccuracy (::1) 13.95ms
2023-07-21,10:30:57 [INFO] (web.py:web:2344): 200 POST /evaluate (127.0.0.1) 20.93ms
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:31:33 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:31:33 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:31:33 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:31:33 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:31:33 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:33 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:31:33 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:33 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:31:33 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:33 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:31:33 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:33 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:31:33 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:31:33 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:31:33 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:31:33 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 3.99ms
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:31:33 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:31:33 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:31:33 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:31:33 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:31:33 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:33 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:31:33 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:33 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:31:33 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:31:33 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getAccuracy') ['response']

2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getAccuracy...
2023-07-21,10:31:33 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:31:33 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:31:33 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getAccuracy...
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): Processing query getAccuracy...
2023-07-21,10:31:33 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:31:33 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:31:33 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:33 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:31:33 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:33 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:31:33 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getAccuracy...
2023-07-21,10:31:33 [DEBUG] (python_service.py:python_service:236): Querying Python service getAccuracy...
2023-07-21,10:31:33 [DEBUG] (python_service.py:python_service:248): Found object {'version': 21, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5DE22C0>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:31:33 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:31:33 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:31:33 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 91.2%
2023-07-21,10:31:33 [DEBUG] (base_handler.py:base_handler:115): Query info: QuerySuccessful(uri='getAccuracy', version=21, response='91.2%')
2023-07-21,10:31:33 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getAccuracy HTTP/1.1" 200 108
2023-07-21,10:31:33 [INFO] (web.py:web:2344): 200 POST /query/getAccuracy (::1) 13.95ms
2023-07-21,10:31:33 [INFO] (web.py:web:2344): 200 POST /evaluate (127.0.0.1) 20.93ms
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:31:37 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:31:37 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:31:37 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:31:37 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:31:37 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:37 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:31:37 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:37 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:31:37 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:37 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:31:37 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:37 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:31:37 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:31:37 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:31:37 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:31:37 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 4.98ms
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:31:37 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:31:37 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:31:37 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:31:37 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:31:37 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:37 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:31:37 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:37 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:31:37 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:31:37 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getAccuracy') ['response']

2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getAccuracy...
2023-07-21,10:31:37 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:31:37 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:31:37 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getAccuracy...
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): Processing query getAccuracy...
2023-07-21,10:31:37 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:31:37 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:31:37 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:37 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:31:37 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:37 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:31:37 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getAccuracy...
2023-07-21,10:31:37 [DEBUG] (python_service.py:python_service:236): Querying Python service getAccuracy...
2023-07-21,10:31:37 [DEBUG] (python_service.py:python_service:248): Found object {'version': 21, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5DE22C0>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:31:37 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:31:37 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:31:37 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 91.2%
2023-07-21,10:31:37 [DEBUG] (base_handler.py:base_handler:115): Query info: QuerySuccessful(uri='getAccuracy', version=21, response='91.2%')
2023-07-21,10:31:37 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getAccuracy HTTP/1.1" 200 108
2023-07-21,10:31:37 [INFO] (web.py:web:2344): 200 POST /query/getAccuracy (::1) 14.19ms
2023-07-21,10:31:37 [INFO] (web.py:web:2344): 200 POST /evaluate (127.0.0.1) 20.18ms
2023-07-21,10:33:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:33:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:33:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:33:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:33:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:33:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:33:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:33:14 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:33:14 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:14 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:33:14 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:14 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:33:14 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:14 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:33:14 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:14 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:33:14 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:33:14 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:33:14 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:33:14 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 5.90ms
2023-07-21,10:33:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:33:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:33:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:33:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:33:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:33:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:33:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:33:14 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:33:14 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:14 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:33:14 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:14 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:33:14 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:14 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:33:14 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getAccuracy') ['response']

2023-07-21,10:33:14 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getAccuracy...
2023-07-21,10:33:14 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:33:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:33:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:33:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:33:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:33:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:33:15 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:33:15 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getAccuracy...
2023-07-21,10:33:15 [DEBUG] (base_handler.py:base_handler:115): Processing query getAccuracy...
2023-07-21,10:33:15 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:33:15 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:33:15 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:15 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:33:15 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:15 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:33:15 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:15 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getAccuracy...
2023-07-21,10:33:15 [DEBUG] (python_service.py:python_service:236): Querying Python service getAccuracy...
2023-07-21,10:33:15 [DEBUG] (python_service.py:python_service:248): Found object {'version': 21, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5DE22C0>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:33:15 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:33:15 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:33:15 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 91.2%
2023-07-21,10:33:15 [DEBUG] (base_handler.py:base_handler:115): Query info: QuerySuccessful(uri='getAccuracy', version=21, response='91.2%')
2023-07-21,10:33:15 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getAccuracy HTTP/1.1" 200 108
2023-07-21,10:33:15 [INFO] (web.py:web:2344): 200 POST /query/getAccuracy (::1) 13.99ms
2023-07-21,10:33:15 [INFO] (web.py:web:2344): 200 POST /evaluate (127.0.0.1) 20.96ms
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:33:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:33:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:33:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:33:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:33:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:33:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:33:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:18 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:33:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:18 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:33:18 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:33:18 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:33:18 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:33:18 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 4.91ms
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:33:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:33:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:33:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:33:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:33:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:33:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:33:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:33:18 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getAccuracy') ['response']

2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getAccuracy...
2023-07-21,10:33:18 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:33:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:33:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getAccuracy...
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): Processing query getAccuracy...
2023-07-21,10:33:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:33:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:33:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:33:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:18 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:33:18 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getAccuracy...
2023-07-21,10:33:18 [DEBUG] (python_service.py:python_service:236): Querying Python service getAccuracy...
2023-07-21,10:33:18 [DEBUG] (python_service.py:python_service:248): Found object {'version': 21, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5DE22C0>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:33:18 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:33:18 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:33:18 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 91.2%
2023-07-21,10:33:18 [DEBUG] (base_handler.py:base_handler:115): Query info: QuerySuccessful(uri='getAccuracy', version=21, response='91.2%')
2023-07-21,10:33:18 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getAccuracy HTTP/1.1" 200 108
2023-07-21,10:33:18 [INFO] (web.py:web:2344): 200 POST /query/getAccuracy (::1) 12.96ms
2023-07-21,10:33:18 [INFO] (web.py:web:2344): 200 POST /evaluate (127.0.0.1) 20.93ms
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:35:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:35:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): Processing DELETE for /endpoints/getCorrectCases
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:148): Collected endpoints: {'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getCorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 4, "dependencies": [], "target": null, "creation_time": 1689907558, "last_modified_time": 1689909194, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCases': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 4, 'dependencies': [], 'target': None, 'creation_time': 1689907558, 'last_modified_time': 1689909194, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:35:18 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:35:18 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:35:18 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:35:18 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:35:18 [INFO] (web.py:web:2344): 204 DELETE /endpoints/getCorrectCases (::1) 13.84ms
2023-07-21,10:35:18 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:35:18 [ERROR] (base_handler.py:base_handler:115): Error submitting update model request: error=AttributeError : 'ContextLoggerWrapper' object has no attribute 'info'
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:35:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:35:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): Processing DELETE for /endpoints/getIncorrectCases
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:148): Collected endpoints: {'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCases', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 5, "dependencies": [], "target": null, "creation_time": 1689907156, "last_modified_time": 1689909193, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCases' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCases': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 5, 'dependencies': [], 'target': None, 'creation_time': 1689907156, 'last_modified_time': 1689909193, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:35:18 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:35:18 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:35:18 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:35:18 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:35:18 [INFO] (web.py:web:2344): 204 DELETE /endpoints/getIncorrectCases (::1) 11.60ms
2023-07-21,10:35:18 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:35:18 [ERROR] (base_handler.py:base_handler:115): Error submitting update model request: error=AttributeError : 'ContextLoggerWrapper' object has no attribute 'info'
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:35:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:35:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): Processing DELETE for /endpoints/getCorrectCase
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:148): Collected endpoints: {'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCase', 'getCorrectCase']'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of correct cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getCorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getCorrectCase': {'description': 'Calculates the number of correct cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:35:18 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:35:18 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:35:18 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:35:18 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:35:18 [INFO] (web.py:web:2344): 204 DELETE /endpoints/getCorrectCase (::1) 9.97ms
2023-07-21,10:35:18 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCase']'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCase']'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:35:18 [ERROR] (base_handler.py:base_handler:115): Error submitting update model request: error=AttributeError : 'ContextLoggerWrapper' object has no attribute 'info'
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:35:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:35:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:35:18 [DEBUG] (base_handler.py:base_handler:115): Processing DELETE for /endpoints/getIncorrectCase
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:148): Collected endpoints: {'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '['getAccuracy', 'getIncorrectCase']'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the number of incorrect cases", "type": "model", "version": 1, "dependencies": [], "target": null, "creation_time": 1689909502, "last_modified_time": 1689909502, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getIncorrectCase' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}, 'getIncorrectCase': {'description': 'Calculates the number of incorrect cases', 'type': 'model', 'version': 1, 'dependencies': [], 'target': None, 'creation_time': 1689909502, 'last_modified_time': 1689909502, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:35:18 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:35:18 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:35:18 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:35:18 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:35:18 [INFO] (web.py:web:2344): 204 DELETE /endpoints/getIncorrectCase (::1) 8.97ms
2023-07-21,10:35:18 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:35:18 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:35:18 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:35:18 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:35:18 [ERROR] (base_handler.py:base_handler:115): Error submitting update model request: error=AttributeError : 'ContextLoggerWrapper' object has no attribute 'info'
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:36:30 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:36:30 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:36:30 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:36:30 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:36:30 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 3.99ms
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:36:30 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:36:30 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:36:30 [INFO] (web.py:web:2344): 200 GET /configurations/endpoint_upload_destination (::1) 0.98ms
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:36:30 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:36:30 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): Processing PUT for /endpoints/getAccuracy
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:36:30 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:36:30 [INFO] (base_handler.py:base_handler:115): Endpoint info: {'dependencies': [], 'description': 'Calculates the test accuracy', 'src_path': 'C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server\\staging\\endpoints\\getAccuracy\\22', 'required_files': [], 'type': 'model', 'name': 'getAccuracy', 'methods': [{'method': 'query'}], 'required_packages': [], 'version': 22}
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): Adding/updating model getAccuracy...
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:36:30 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 21, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689931829, "schema": null}'
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:36:30 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 21, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689931829, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:36:30 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:36:30 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:36:30 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:36:30 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:36:30 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 22, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689932190, "schema": null}'
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:36:30 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 22, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689932190, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 22, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689932190, "schema": null}'
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:36:30 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 22, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689932190, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:36:30 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,10:36:30 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getAccuracy', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getAccuracy/22', version=22, is_update=True, endpoint_type='model')
2023-07-21,10:36:30 [INFO] (python_service.py:python_service:89): Loading object:, URI=getAccuracy, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getAccuracy/22, version=22, is_updated=True
2023-07-21,10:36:30 [INFO] (callbacks.py:callbacks:24): Waiting for object to be loaded...
2023-07-21,10:36:30 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,10:36:30 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 21, 'type': 'model', 'status': 'LoadInProgress', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,10:36:30 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,10:36:30 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,10:36:30 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 22, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,10:36:30 [INFO] (callbacks.py:callbacks:35): Object load status: LoadSuccessful
2023-07-21,10:36:30 [ERROR] (base_handler.py:base_handler:115): Error submitting update model request: error=AttributeError : 'ContextLoggerWrapper' object has no attribute 'info'
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 22, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689932190, "schema": null}'
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:36:30 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 22, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689932190, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:36:30 [INFO] (web.py:web:2344): 200 PUT /endpoints/getAccuracy (::1) 130.44ms
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:36:30 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:36:30 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:36:30 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:30 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:36:30 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:30 [DEBUG] (base_handler.py:base_handler:115): Found models: {'getAccuracy': {'version': 22, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}}
2023-07-21,10:36:30 [INFO] (web.py:web:2344): 200 GET /status (::1) 2.34ms
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:36:36 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:36:36 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:36:36 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:36:36 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:36:36 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:36 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:36:36 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:36 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:36:36 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:36 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:36:36 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:36 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:36:36 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:36:36 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:36:36 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:36:36 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 4.98ms
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:36:36 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:36:36 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:36:36 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:36:36 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:36:36 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:36 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:36:36 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:36 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:36:36 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:36:36 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getAccuracy') ['response']

2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getAccuracy...
2023-07-21,10:36:36 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:36:36 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:36:36 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getAccuracy...
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): Processing query getAccuracy...
2023-07-21,10:36:36 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:36:36 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:36:36 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:36 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:36:36 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:36 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:36:36 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getAccuracy...
2023-07-21,10:36:36 [DEBUG] (python_service.py:python_service:236): Querying Python service getAccuracy...
2023-07-21,10:36:36 [DEBUG] (python_service.py:python_service:248): Found object {'version': 22, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5CCB160>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:36:36 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:36:36 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:36:36 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 91.2%
2023-07-21,10:36:36 [DEBUG] (base_handler.py:base_handler:115): Query info: QuerySuccessful(uri='getAccuracy', version=22, response='91.2%')
2023-07-21,10:36:36 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getAccuracy HTTP/1.1" 200 108
2023-07-21,10:36:36 [INFO] (web.py:web:2344): 200 POST /query/getAccuracy (::1) 16.94ms
2023-07-21,10:36:36 [INFO] (web.py:web:2344): 200 POST /evaluate (127.0.0.1) 25.91ms
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:36:40 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:36:40 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:36:40 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:36:40 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:36:40 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:40 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:36:40 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:40 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:36:40 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:40 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:36:40 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:40 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:36:40 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:36:40 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:36:40 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:36:40 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 4.98ms
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:36:40 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:36:40 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:36:40 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:36:40 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:36:40 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:40 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:36:40 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:40 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:36:40 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:36:40 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getAccuracy') ['response']

2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getAccuracy...
2023-07-21,10:36:40 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:36:40 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:36:40 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getAccuracy...
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): Processing query getAccuracy...
2023-07-21,10:36:40 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:36:40 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:36:40 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:40 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:36:40 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:40 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:36:40 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getAccuracy...
2023-07-21,10:36:40 [DEBUG] (python_service.py:python_service:236): Querying Python service getAccuracy...
2023-07-21,10:36:40 [DEBUG] (python_service.py:python_service:248): Found object {'version': 22, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5CCB160>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:36:40 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:36:40 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:36:40 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 91.2%
2023-07-21,10:36:40 [DEBUG] (base_handler.py:base_handler:115): Query info: QuerySuccessful(uri='getAccuracy', version=22, response='91.2%')
2023-07-21,10:36:40 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getAccuracy HTTP/1.1" 200 108
2023-07-21,10:36:40 [INFO] (web.py:web:2344): 200 POST /query/getAccuracy (::1) 13.95ms
2023-07-21,10:36:40 [INFO] (web.py:web:2344): 200 POST /evaluate (127.0.0.1) 20.92ms
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:36:46 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:36:46 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:36:46 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:36:46 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:36:46 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:46 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:36:46 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:46 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:36:46 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:46 [DEBUG] (state.py:state:613): Loading option 'Description' from section [Service Info]...
2023-07-21,10:36:46 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:46 [DEBUG] (state.py:state:613): Loading option 'Creation Time' from section [Service Info]...
2023-07-21,10:36:46 [DEBUG] (state.py:state:635): Returning value '0'
2023-07-21,10:36:46 [DEBUG] (state.py:state:613): Loading option 'Name' from section [Service Info]...
2023-07-21,10:36:46 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-07-21,10:36:46 [INFO] (web.py:web:2344): 200 GET /info (127.0.0.1) 6.07ms
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:36:46 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:36:46 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:36:46 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:36:46 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:36:46 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:46 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:36:46 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:46 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:36:46 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): Processing POST request...
2023-07-21,10:36:46 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 return tabpy.query('getAccuracy') ['response']

2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): Querying http://localhost:9004/query/getAccuracy...
2023-07-21,10:36:46 [DEBUG] (connectionpool.py:connectionpool:244): Starting new HTTP connection (1): localhost:9004
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:36:46 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:36:46 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): Processing POST for /query/getAccuracy...
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): Processing query getAccuracy...
2023-07-21,10:36:46 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:36:46 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:36:46 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:46 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:36:46 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:46 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:36:46 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): Collecting query info for getAccuracy...
2023-07-21,10:36:46 [DEBUG] (python_service.py:python_service:236): Querying Python service getAccuracy...
2023-07-21,10:36:46 [DEBUG] (python_service.py:python_service:248): Found object {'version': 22, 'type': 'model', 'endpoint_obj': <tabpy.tabpy_tools.custom_query_object.CustomQueryObject object at 0x000001F1E5CCB160>, 'status': 'LoadSuccessful', 'last_error': None}
2023-07-21,10:36:46 [DEBUG] (python_service.py:python_service:262): Querying endpoint with params ({})...
2023-07-21,10:36:46 [DEBUG] (custom_query_object.py:custom_query_object:53): Running custom query with arguments ((), {})...
2023-07-21,10:36:46 [DEBUG] (custom_query_object.py:custom_query_object:63): Received response 91.2%
2023-07-21,10:36:46 [DEBUG] (base_handler.py:base_handler:115): Query info: QuerySuccessful(uri='getAccuracy', version=22, response='91.2%')
2023-07-21,10:36:46 [DEBUG] (connectionpool.py:connectionpool:546): http://localhost:9004 "POST /query/getAccuracy HTTP/1.1" 200 108
2023-07-21,10:36:46 [INFO] (web.py:web:2344): 200 POST /query/getAccuracy (::1) 16.94ms
2023-07-21,10:36:46 [INFO] (web.py:web:2344): 200 POST /evaluate (127.0.0.1) 24.91ms
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:42:47 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:42:47 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:42:47 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 22, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689932190, "schema": null}'
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:42:47 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 22, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689932190, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:42:47 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 4.97ms
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:42:47 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:42:47 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:42:47 [INFO] (web.py:web:2344): 200 GET /configurations/endpoint_upload_destination (::1) 1.99ms
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:42:47 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:42:47 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): Processing PUT for /endpoints/getAccuracy
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 22, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689932190, "schema": null}'
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:42:47 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 22, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689932190, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:42:47 [INFO] (base_handler.py:base_handler:115): Endpoint info: {'name': 'getAccuracy', 'required_packages': [], 'methods': [{'method': 'query'}], 'src_path': 'C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server\\staging\\endpoints\\getAccuracy\\23', 'type': 'model', 'required_files': [], 'dependencies': [], 'description': 'Calculates the test accuracy', 'version': 23}
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): Adding/updating model getAccuracy...
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 22, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689932190, "schema": null}'
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:42:47 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 22, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689932190, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 22, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689932190, "schema": null}'
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:42:47 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 22, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689932190, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:42:47 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:42:47 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:42:47 [INFO] (state.py:state:642): Writing state to config
2023-07-21,10:42:47 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,10:42:47 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 23, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689932567, "schema": null}'
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:42:47 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 23, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689932567, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 23, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689932567, "schema": null}'
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:42:47 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 23, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689932567, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:42:47 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,10:42:47 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getAccuracy', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getAccuracy/23', version=23, is_update=True, endpoint_type='model')
2023-07-21,10:42:47 [INFO] (python_service.py:python_service:89): Loading object:, URI=getAccuracy, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getAccuracy/23, version=23, is_updated=True
2023-07-21,10:42:47 [INFO] (callbacks.py:callbacks:24): Waiting for object to be loaded...
2023-07-21,10:42:47 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,10:42:47 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 22, 'type': 'model', 'status': 'LoadInProgress', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,10:42:47 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,10:42:47 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,10:42:47 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 23, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,10:42:47 [INFO] (callbacks.py:callbacks:35): Object load status: LoadSuccessful
2023-07-21,10:42:47 [ERROR] (base_handler.py:base_handler:115): Error submitting update model request: error=AttributeError : 'ContextLoggerWrapper' object has no attribute 'info'
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 23, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689932567, "schema": null}'
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,10:42:47 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 23, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689932567, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,10:42:47 [INFO] (web.py:web:2344): 200 PUT /endpoints/getAccuracy (::1) 126.90ms
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,10:42:47 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,10:42:47 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,10:42:47 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:42:47 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,10:42:47 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,10:42:47 [DEBUG] (base_handler.py:base_handler:115): Found models: {'getAccuracy': {'version': 23, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}}
2023-07-21,10:42:47 [INFO] (web.py:web:2344): 200 GET /status (::1) 2.99ms
2023-07-21,11:24:23 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,11:24:23 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,11:24:23 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,11:24:23 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,11:24:23 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,11:24:23 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,11:24:23 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 23, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689932567, "schema": null}'
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,11:24:23 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 23, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689932567, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,11:24:23 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 3.91ms
2023-07-21,11:24:23 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,11:24:23 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,11:24:23 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,11:24:23 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,11:24:23 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,11:24:23 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,11:24:23 [INFO] (web.py:web:2344): 200 GET /configurations/endpoint_upload_destination (::1) 0.99ms
2023-07-21,11:24:23 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,11:24:23 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,11:24:23 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,11:24:23 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,11:24:23 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,11:24:23 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,11:24:23 [DEBUG] (base_handler.py:base_handler:115): Processing PUT for /endpoints/getAccuracy
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 23, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689932567, "schema": null}'
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,11:24:23 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 23, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689932567, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,11:24:23 [INFO] (base_handler.py:base_handler:115): Endpoint info: {'type': 'model', 'dependencies': [], 'name': 'getAccuracy', 'required_packages': [], 'required_files': [], 'description': 'Calculates the test accuracy', 'version': 24, 'methods': [{'method': 'query'}], 'src_path': 'C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server\\staging\\endpoints\\getAccuracy\\24'}
2023-07-21,11:24:23 [DEBUG] (base_handler.py:base_handler:115): Adding/updating model getAccuracy...
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 23, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689932567, "schema": null}'
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,11:24:23 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 23, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689932567, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 23, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689932567, "schema": null}'
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,11:24:23 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 23, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689932567, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,11:24:23 [INFO] (state.py:state:642): Writing state to config
2023-07-21,11:24:23 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,11:24:23 [INFO] (state.py:state:642): Writing state to config
2023-07-21,11:24:23 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,11:24:23 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 24, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689935063, "schema": null}'
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,11:24:23 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 24, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689935063, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 24, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689935063, "schema": null}'
2023-07-21,11:24:23 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,11:24:23 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,11:24:23 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 24, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689935063, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,11:24:23 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,11:24:23 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getAccuracy', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getAccuracy/24', version=24, is_update=True, endpoint_type='model')
2023-07-21,11:24:23 [INFO] (python_service.py:python_service:89): Loading object:, URI=getAccuracy, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getAccuracy/24, version=24, is_updated=True
2023-07-21,11:24:23 [INFO] (callbacks.py:callbacks:24): Waiting for object to be loaded...
2023-07-21,11:24:23 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,11:24:23 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 23, 'type': 'model', 'status': 'LoadInProgress', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,11:24:23 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,11:24:24 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,11:24:24 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 24, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,11:24:24 [INFO] (callbacks.py:callbacks:35): Object load status: LoadSuccessful
2023-07-21,11:24:24 [ERROR] (base_handler.py:base_handler:115): Error submitting update model request: error=AttributeError : 'ContextLoggerWrapper' object has no attribute 'info'
2023-07-21,11:24:24 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,11:24:24 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 24, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689935063, "schema": null}'
2023-07-21,11:24:24 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,11:24:24 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,11:24:24 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 24, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689935063, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,11:24:24 [INFO] (web.py:web:2344): 200 PUT /endpoints/getAccuracy (::1) 139.89ms
2023-07-21,11:24:24 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,11:24:24 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,11:24:24 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,11:24:24 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,11:24:24 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,11:24:24 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,11:24:24 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,11:24:24 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,11:24:24 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,11:24:24 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,11:24:24 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,11:24:24 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,11:24:24 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,11:24:24 [DEBUG] (base_handler.py:base_handler:115): Found models: {'getAccuracy': {'version': 24, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}}
2023-07-21,11:24:24 [INFO] (web.py:web:2344): 200 GET /status (::1) 4.98ms
2023-07-21,11:28:39 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,11:28:39 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,11:28:39 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,11:28:39 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,11:28:39 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,11:28:39 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,11:28:39 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 24, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689935063, "schema": null}'
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,11:28:39 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 24, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689935063, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,11:28:39 [INFO] (web.py:web:2344): 200 GET /endpoints (::1) 3.98ms
2023-07-21,11:28:39 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,11:28:39 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,11:28:39 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,11:28:39 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,11:28:39 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,11:28:39 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,11:28:39 [INFO] (web.py:web:2344): 200 GET /configurations/endpoint_upload_destination (::1) 0.98ms
2023-07-21,11:28:39 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,11:28:39 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,11:28:39 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,11:28:39 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,11:28:39 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,11:28:39 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,11:28:39 [DEBUG] (base_handler.py:base_handler:115): Processing PUT for /endpoints/getAccuracy
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 24, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689935063, "schema": null}'
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,11:28:39 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 24, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689935063, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,11:28:39 [INFO] (base_handler.py:base_handler:115): Endpoint info: {'version': 25, 'src_path': 'C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server\\staging\\endpoints\\getAccuracy\\25', 'required_files': [], 'name': 'getAccuracy', 'dependencies': [], 'type': 'model', 'required_packages': [], 'description': 'Calculates the test accuracy', 'methods': [{'method': 'query'}]}
2023-07-21,11:28:39 [DEBUG] (base_handler.py:base_handler:115): Adding/updating model getAccuracy...
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 24, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689935063, "schema": null}'
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,11:28:39 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 24, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689935063, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 24, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689935063, "schema": null}'
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,11:28:39 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 24, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689935063, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,11:28:39 [INFO] (state.py:state:642): Writing state to config
2023-07-21,11:28:39 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,11:28:39 [INFO] (state.py:state:642): Writing state to config
2023-07-21,11:28:39 [DEBUG] (util.py:util:19): State path is C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server
2023-07-21,11:28:39 [INFO] (base_handler.py:base_handler:115): Loading state from state file
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 25, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689935319, "schema": null}'
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,11:28:39 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 25, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689935319, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'None' from section [Query Objects Service Versions]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '['getAccuracy']'
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 25, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689935319, "schema": null}'
2023-07-21,11:28:39 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,11:28:39 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,11:28:39 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 25, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689935319, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,11:28:39 [DEBUG] (python_service.py:python_service:39): Received request LoadObject
2023-07-21,11:28:39 [DEBUG] (python_service.py:python_service:53): Returning response LoadInProgress(uri='getAccuracy', path='C:\\Users\\Olatunde Adekola\\Documents\\heart_disease_analysis\\myenv\\Lib\\site-packages\\tabpy\\tabpy_server/query_objects/getAccuracy/25', version=25, is_update=True, endpoint_type='model')
2023-07-21,11:28:39 [INFO] (python_service.py:python_service:89): Loading object:, URI=getAccuracy, URL=C:\Users\Olatunde Adekola\Documents\heart_disease_analysis\myenv\Lib\site-packages\tabpy\tabpy_server/query_objects/getAccuracy/25, version=25, is_updated=True
2023-07-21,11:28:39 [INFO] (callbacks.py:callbacks:24): Waiting for object to be loaded...
2023-07-21,11:28:39 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,11:28:39 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 24, 'type': 'model', 'status': 'LoadInProgress', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,11:28:39 [INFO] (query_object.py:query_object:80): Loaded query object "CustomQueryObject" successfully
2023-07-21,11:28:40 [DEBUG] (python_service.py:python_service:39): Received request ListObjects
2023-07-21,11:28:40 [DEBUG] (python_service.py:python_service:53): Returning response ObjectList(objects={'getAccuracy': {'version': 25, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'reason': None}})
2023-07-21,11:28:40 [INFO] (callbacks.py:callbacks:35): Object load status: LoadSuccessful
2023-07-21,11:28:40 [ERROR] (base_handler.py:base_handler:115): Error submitting update model request: error=AttributeError : 'ContextLoggerWrapper' object has no attribute 'info'
2023-07-21,11:28:40 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Service Versions]...
2023-07-21,11:28:40 [DEBUG] (state.py:state:635): Returning value '{"description": "Calculates the test accuracy", "type": "model", "version": 25, "dependencies": [], "target": null, "creation_time": 1689873482, "last_modified_time": 1689935319, "schema": null}'
2023-07-21,11:28:40 [DEBUG] (state.py:state:613): Loading option 'getAccuracy' from section [Query Objects Docstrings]...
2023-07-21,11:28:40 [DEBUG] (state.py:state:635): Returning value '-- no docstring found in query function --'
2023-07-21,11:28:40 [DEBUG] (state.py:state:148): Collected endpoints: {'getAccuracy': {'description': 'Calculates the test accuracy', 'type': 'model', 'version': 25, 'dependencies': [], 'target': None, 'creation_time': 1689873482, 'last_modified_time': 1689935319, 'schema': None, 'docstring': '-- no docstring found in query function --'}}
2023-07-21,11:28:40 [INFO] (web.py:web:2344): 200 PUT /endpoints/getAccuracy (::1) 139.56ms
2023-07-21,11:28:40 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-07-21,11:28:40 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-07-21,11:28:40 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-07-21,11:28:40 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-07-21,11:28:40 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-07-21,11:28:40 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-07-21,11:28:40 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-07-21,11:28:40 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-07-21,11:28:40 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,11:28:40 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-07-21,11:28:40 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,11:28:40 [DEBUG] (state.py:state:613): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-07-21,11:28:40 [DEBUG] (state.py:state:635): Returning value ''
2023-07-21,11:28:40 [DEBUG] (base_handler.py:base_handler:115): Found models: {'getAccuracy': {'version': 25, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCases': {'version': 5, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCases': {'version': 4, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getIncorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}, 'getCorrectCase': {'version': 1, 'type': 'model', 'status': 'LoadSuccessful', 'last_error': None}}
2023-07-21,11:28:40 [INFO] (web.py:web:2344): 200 GET /status (::1) 2.99ms
